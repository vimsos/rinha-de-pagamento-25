services:
  api1:
    build:
      context: api
    hostname: api1
    environment:
      APP_CONFIG: &app_config >
        {
          "database_url": "postgres://pg:pg@pg:5432/rinha",
          "log_level": "Warn",
          "listen_port": 8000,
          "max_in_flight": 256,
          "max_wait_millis": 5,
          "external_processors": [
            {
              "name": "default",
              "endpoint": "http://payment-processor-default:8080/payments"
            },
            {
              "name": "fallback",
              "endpoint": " http://payment-processor-fallback:8080/payments"
            }
          ]
        }
    networks:
      - internal-network
      - payment-processor
    depends_on:
      - pg
    expose:
      - 8000
    deploy:
      resources:
        limits:
          cpus: &api_cpu_limit "0.2"
          memory: &api_memory_limit "25MB"

  api2:
    build:
      context: api
    hostname: api2
    environment:
      APP_CONFIG: *app_config
    networks:
      - internal-network
      - payment-processor
    depends_on:
      - pg
    expose:
      - 8000
    deploy:
      resources:
        limits:
          cpus: *api_cpu_limit
          memory: *api_memory_limit

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    networks:
      - internal-network
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.20"
          memory: "20MB"

  pg:
    image: postgres:17
    volumes:
      - ./config/migrations:/docker-entrypoint-initdb.d:ro
    command: postgres -c log_min_messages=FATAL
    environment:
      POSTGRES_USER: pg
      POSTGRES_PASSWORD: pg
      POSTGRES_DB: rinha
    networks:
      - internal-network
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: "0.60"
          memory: "200MB"

networks:
  internal-network:
    driver: bridge
  payment-processor:
    external: true